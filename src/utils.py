import pandas as pd
from numpy import mean
from sklearn.linear_model import LogisticRegression
from sklearn.linear_model import RidgeClassifier
from sklearn.linear_model import SGDClassifier
from sklearn.linear_model import PassiveAggressiveClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.tree import ExtraTreeClassifier
from sklearn.svm import LinearSVC
from sklearn.svm import SVC
from sklearn.naive_bayes import GaussianNB
from sklearn.ensemble import AdaBoostClassifier
from sklearn.ensemble import BaggingClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.ensemble import ExtraTreesClassifier
from sklearn.gaussian_process import GaussianProcessClassifier
from sklearn.ensemble import GradientBoostingClassifier
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis
from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis
from sklearn.model_selection import cross_val_score
from src.config import BASE_DIR

def get_dataset():
    df = pd.read_csv(BASE_DIR / 'CIC-Evasive-PDFMal2022/data/PDFMalware2022_cleaned.csv')
    return df.iloc[:, 0:-1], df.iloc[:, -1]

def get_models():
    models = [GaussianProcessClassifier(), GradientBoostingClassifier(), 
            LinearDiscriminantAnalysis(), QuadraticDiscriminantAnalysis(), 
            LogisticRegression(max_iter=500), RidgeClassifier(), 
            SGDClassifier(), PassiveAggressiveClassifier(), 
            KNeighborsClassifier(), DecisionTreeClassifier(), 
            ExtraTreeClassifier(), LinearSVC(max_iter=500), SVC(), GaussianNB(), 
            AdaBoostClassifier(), BaggingClassifier(), RandomForestClassifier(), 
            ExtraTreesClassifier()]
    return models

def evaluate_model(model, cv):
    X, y = get_dataset()
    scores = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1)
    return mean(scores), scores.min(), scores.max()
 
